--- Makefile.old	2006-01-28 03:35:26.000000000 +0000
+++ Makefile	2006-06-26 01:36:59.000000000 +0100
@@ -1,69 +1,24 @@
 # this makefile requires GNU make.  on FreeBSD run 'gmake' instead of make
 
-TARGET_OS=$(shell echo __`uname | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`__)
+TARGET_OS=__LINUX__
 LIBFTP_DIR=libftp-5.0.1.modified.by.in
-
-ifeq (${TARGET_OS},__FREEBSD__)
-MAKE=gmake
-LD_FLAGS="-lc_r"
-else
-MAKE=make
-LD_FLAGS=
-endif
+#TARGET_CC=/home/ubuntu/Desktop/slug/optware/toolchain/armv5b-softfloat-linux/gcc-3.3.5-glibc-2.2.5/bin/armv5b-softfloat-linux-gcc
 
 extract-xiso: extract-xiso.c
 	@echo "compiling extract-xiso for ${TARGET_OS}"
 	@echo
-ifeq (${TARGET_OS},__DARWIN__)
-	@echo "NOTE:  If you want to build a universal binary on Mac OS X, do not use this target!"
-	@echo "       Instead, do \"make clean\" then \"make fat\"."
-	@echo "       Additionally, you MUST have the 10.4u SDK installed (XCode >= 2.2.1)."
-	@echo
-endif
 	${MAKE} libftp
-ifeq (${TARGET_OS},__DARWIN__)
-	gcc -O2 ${LD_FLAGS} -o extract-xiso -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a -framework CoreFoundation -framework DiscRecording
-else
-	gcc -O2 ${LD_FLAGS} -o extract-xiso -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a
-endif
-
-ifeq (${TARGET_OS},__DARWIN__)
-fat:
-	@echo "compiling extract-xiso as universal binary for ${TARGET_OS}"
-	@echo
-	${MAKE} -C ${LIBFTP_DIR} clean
-	CFLAGS="-I. -O2 -D${TARGET_OS} -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch ppc -mtune=G5" ${MAKE} -C ${LIBFTP_DIR}
-	gcc -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch ppc -mtune=G5 -O2 ${LD_FLAGS} -o extract-xiso.ppc -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a -framework CoreFoundation -framework DiscRecording
-	${MAKE} -C ${LIBFTP_DIR} clean
-	CFLAGS="-I. -O2 -D${TARGET_OS} -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -mtune=pentium4" ${MAKE} -C ${LIBFTP_DIR}
-	gcc -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -mtune=pentium4 -O2 ${LD_FLAGS} -o extract-xiso.i386 -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a -framework CoreFoundation -framework DiscRecording
-	lipo -create extract-xiso.ppc extract-xiso.i386 -output extract-xiso
-	rm -f extract-xiso.ppc extract-xiso.i386
-endif
+	${CC} -O2 ${LD_FLAGS} -o extract-xiso -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a
 
 static:
 	@echo "compiling static extract-xiso for ${TARGET_OS}"
 	@echo
 	${MAKE} libftp
-	gcc -O2 -static -o extract-xiso-static -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a -lpthread
-	
-debug:
-	@echo "compiling debug extract-xiso for ${TARGET_OS}"
-	@echo
-	${MAKE} libftp-debug
-ifeq (${TARGET_OS},__DARWIN__)
-	gcc -g -o extract-xiso -D${TARGET_OS} -DDEBUG extract-xiso.c ${LIBFTP_DIR}/libftp.a -framework CoreFoundation -framework DiscRecording
-else
-	gcc -g -o extract-xiso -D${TARGET_OS} -DDEBUG extract-xiso.c ${LIBFTP_DIR}/libftp.a -lpthread
-endif
+	${CC} -O2 -static -o extract-xiso-static -D${TARGET_OS} extract-xiso.c ${LIBFTP_DIR}/libftp.a -lpthread
 
 libftp:
 	@rm -f ${LIBFTP_DIR}/libftp.a
-	bash -c 'declare -x CFLAGS="-I. -O2 -D${TARGET_OS}" ; ${MAKE} -C ${LIBFTP_DIR}'
-
-libftp-debug:
-	@rm -f ${LIBFTP_DIR}/libftp.a
-	bash -c 'declare -x CFLAGS="-I. -g -D${TARGET_OS}" ; ${MAKE} -C ${LIBFTP_DIR}'
+	bash -c 'declare -x CFLAGS="-I. -O2 -D${TARGET_OS}" ; ${MAKE} -C ${LIBFTP_DIR} -e CC=${CC}'
 
 clean:
 	${MAKE} -C ${LIBFTP_DIR} clean
@@ -72,6 +27,4 @@
 dist:
 	${MAKE} clean
 	${MAKE}
-ifeq (${TARGET_OS},__LINUX__)
 	${MAKE} static
-endif

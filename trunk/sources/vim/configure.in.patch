--- vim63-orig/src/configure.in	2004-04-25 04:22:43.000000000 -0700
+++ vim/src/configure.in	2005-05-09 21:55:48.289398000 -0700
@@ -41,13 +41,6 @@
   fi
 fi
 
-dnl If configure thinks we are cross compiling, there is probably something
-dnl wrong with the CC or CFLAGS settings, give an understandable error message
-if test "$cross_compiling" = yes; then
-  AC_MSG_ERROR([cannot compile a simple program, check CC and CFLAGS
-  (cross compiling doesn't work)])
-fi
-
 dnl gcc-cpp has the wonderful -MM option to produce nicer dependencies
 test "$GCC" = yes && CPP_MM=M; AC_SUBST(CPP_MM)
 
@@ -1793,10 +1786,7 @@
 dnl Checks for libraries and include files.
 
 AC_MSG_CHECKING(quality of toupper)
-AC_TRY_RUN([#include <ctype.h>
-main() { exit(toupper('A') == 'A' && tolower('z') == 'z'); }],
-	AC_DEFINE(BROKEN_TOUPPER) AC_MSG_RESULT(bad),
-	AC_MSG_RESULT(good), AC_MSG_ERROR(failed to compile test program))
+AC_MSG_RESULT(good)
 
 AC_MSG_CHECKING(whether __DATE__ and __TIME__ work)
 AC_TRY_COMPILE(, [printf("(" __DATE__ " " __TIME__ ")");],
@@ -2113,48 +2103,7 @@
 dnl
 dnl support provided by Luke Mewburn <lm@rmit.edu.au>, 931222
 AC_MSG_CHECKING(default tty permissions/group)
-rm -f conftest_grp
-AC_TRY_RUN([
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <stdio.h>
-main()
-{
-  struct stat sb;
-  char *x,*ttyname();
-  int om, m;
-  FILE *fp;
-
-  if (!(x = ttyname(0))) exit(1);
-  if (stat(x, &sb)) exit(1);
-  om = sb.st_mode;
-  if (om & 002) exit(0);
-  m = system("mesg y");
-  if (m == -1 || m == 127) exit(1);
-  if (stat(x, &sb)) exit(1);
-  m = sb.st_mode;
-  if (chmod(x, om)) exit(1);
-  if (m & 002) exit(0);
-  if (sb.st_gid == getgid()) exit(1);
-  if (!(fp=fopen("conftest_grp", "w")))
-    exit(1);
-  fprintf(fp, "%d\n", sb.st_gid);
-  fclose(fp);
-  exit(0);
-}
-],[
-    if test -f conftest_grp; then
-	ptygrp=`cat conftest_grp`
-	AC_MSG_RESULT([pty mode: 0620, group: $ptygrp])
-	AC_DEFINE(PTYMODE, 0620)
-	AC_DEFINE_UNQUOTED(PTYGROUP,$ptygrp)
-    else
 	AC_MSG_RESULT([ptys are world accessable])
-    fi
-],
-    AC_MSG_RESULT([can't determine - assume ptys are world accessable]),
-    AC_MSG_ERROR(failed to compile test program))
-rm -f conftest_grp
 
 dnl Checks for library functions. ===================================
 
@@ -2184,19 +2133,7 @@
 dnl tricky stuff: try to find out if getcwd() is implemented with
 dnl system("sh -c pwd")
 AC_MSG_CHECKING(getcwd implementation)
-AC_TRY_RUN([
-char *dagger[] = { "IFS=pwd", 0 };
-main()
-{
-  char buffer[500];
-  extern char **environ;
-  environ = dagger;
-  return getcwd(buffer, 500) ? 0 : 1;
-}],
-	AC_MSG_RESULT(it is usable),
-	AC_MSG_RESULT(it stinks)
-		AC_DEFINE(BAD_GETCWD),
-	AC_MSG_ERROR(failed to compile test program))
+	AC_MSG_RESULT(it is usable)
 
 dnl Check for functions in one big call, to reduce the size of configure
 AC_CHECK_FUNCS(bcmp fchdir fchown fseeko fsync ftello getcwd getpseudotty \
@@ -2220,12 +2157,7 @@
 	AC_MSG_RESULT(no))
 
 AC_MSG_CHECKING(whether stat() ignores a trailing slash)
-AC_TRY_RUN(
-[#include <sys/types.h>
-#include <sys/stat.h>
-main() {struct stat st;  exit(stat("configure/", &st) != 0); }],
-	AC_MSG_RESULT(yes); AC_DEFINE(STAT_IGNORES_SLASH),
-	AC_MSG_RESULT(no), AC_MSG_ERROR(failed to compile test program))
+	AC_MSG_RESULT(no)
 
 dnl Link with iconv for charset translation, if not found without library.
 dnl check for iconv() requires including iconv.h
@@ -2344,27 +2276,7 @@
 fi
 
 AC_MSG_CHECKING(for vsnprintf())
-AC_TRY_RUN([
-#include <stdio.h>
-#include <stdarg.h>
-	/* Check use of vsnprintf() */
-	void warn(char *fmt, ...);
-	void warn(char *fmt, ...)
-	{
-	  va_list ap; char buf[20];
-	  va_start(ap, fmt);
-	  vsnprintf(buf, 20, fmt, ap);
-	  va_end(ap);
-	}
-	main()
-	{
-	warn("testing %s\n", "a very long string that won't fit");
-	exit(0);
-	}
-	    ],
-	AC_DEFINE(HAVE_VSNPRINTF) AC_MSG_RESULT(yes),
-	AC_MSG_RESULT(no),
-	AC_MSG_ERROR(failed to compile test program))
+	AC_DEFINE(HAVE_VSNPRINTF) AC_MSG_RESULT(yes)
 
 
 dnl rename needs to be checked separately to work on Nextstep with cc
@@ -2450,15 +2362,7 @@
 dnl Check for memmove() before bcopy(), makes memmove() be used when both are
 dnl present, fixes problem with incompatibility between Solaris 2.4 and 2.5.
 
-AC_TRY_RUN([#define mch_memmove(s,d,l) memmove(d,s,l) $bcopy_test_prog],
-    AC_DEFINE(USEMEMMOVE) AC_MSG_RESULT(memmove does),
-    AC_TRY_RUN([#define mch_memmove(s,d,l) bcopy(d,s,l) $bcopy_test_prog],
-	AC_DEFINE(USEBCOPY) AC_MSG_RESULT(bcopy does),
-	AC_TRY_RUN([#define mch_memmove(s,d,l) memcpy(d,s,l) $bcopy_test_prog],
-	    AC_DEFINE(USEMEMCPY) AC_MSG_RESULT(memcpy does), AC_MSG_RESULT(no),
-	    AC_MSG_ERROR(failed to compile test program)),
-	AC_MSG_ERROR(failed to compile test program)),
-    AC_MSG_ERROR(failed to compile test program))
+    AC_DEFINE(USEMEMMOVE) AC_MSG_RESULT(memmove does)
 
 dnl Check for multibyte locale functions
 dnl Find out if _Xsetlocale() is supported by libX11.

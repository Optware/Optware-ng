# $Id$
#
# This is the mt-daapd config file.
#

#
# web_root (required)
#
# Location of the admin web pages.  This should be correct
#

web_root	/opt/share/mt-daapd/admin-root

#
# port (required)
#
# What port to listen on.  It is possible to use a different
# port, but this is the default iTunes port
#

port		3689

#
# admin_pw (required)
#
# This is the password to the administrative pages
#

admin_pw	mt-daapd

#
# db_dir (required)
#
# This is where mt-daapd stores its database of song information.  
#

db_dir		/opt/var/mt-daapd

#
# mp3_dir (required)
#
# Location of the mp3 files to share
#

mp3_dir		/share/hdd/data/public/mp3

#
# servername (required)
#
# This is both the name of the server as advertised
# via rendezvous, and the name of the database
# exported via DAAP
#

servername	mt-daapd

#
# runas (required)
#
# This is the user to drop privs to if running as
# root.  If mt-daapd is not started as root, this
# configuration option is ignored.  Notice that this
# must be specified whether the server is running
# as root or not.
#

runas	guest

#
# playlist (optional)
#
# This is the location of a playlist file.
# This is for Apple-style "Smart Playlists"
# See the mt-daapd.playlist file in the 
# contrib directory for syntax and examples
#
# Note that static playlists will still
# show up, even if this directive is not
# specified
#

playlist	/opt/etc/mt-daapd/mt-daapd.playlist

#
# password (optional)
#
# This is the password required to listen to MP3 files
# i.e. the password that iTunes prompts for
#

#password	mp3

#
# extensions (optional)
#
# These are the file extensions that the daap server will
# try to index and serve.  By default, it only indexes and
# serves .mp3 files.  It can also server .m4a and .m4p files,
# and just about any other files, really.  Unfortunately, while
# it can *attempt* to serve other files (.ogg?), iTunes won't
# play them.  Perhaps this would be useful on Linux with
# Rhythmbox, once it understands daap.  (hurry up!)
#

extensions .mp3,.m4a,.m4p


#
# logfile (optional)
#
# This is the file to log to.  If this is not configured,
# then it will log to the syslog.
#
# Not that the -d <level> switch will control the log verbosity.
# By default, it runs at log level 1.  Log level 9 will churn
# out scads of useless debugging information.  Values in between
# will vary the amount of logging you get.
#

#logfile /var/log/mt-daapd.log

#
# art_filename (optional)
#
# There is experimental support thanks to Hiren Joshi
# (hirenj@mooh.org) for dynamically adding art to the id3v2
# header as it is streamed (!!).  If you were using a music system
# like zina or andromeda, for example, with cover art called 
# "_folderOpenImage.jpg", you could use the parameter
# art_file _folderOpenImage.jpg and if the file _folderOpenImage.jpg
# was located in the same folder as the .mp3 file, it would appear
# in iTunes.  Cool, eh? 
#
# This is EXPERIMENTAL, so if you run into strange problems with
# seeking in the songs, or songs that won't stream and leave an
# exclamation point, then comment out this directive and try again.
#
# Do let me know (rpedde@users.sourceforge.net) if you have
# problems with it though.  And thanks again to Hiren.
#

#art_filename _folderOpenImage.jpg

#
# rescan_interval
#
# How often to check the file system to see if any mp3 files
# have been added or removed. 
#
# if not specified, the default is 0, which disables background scanning.
#
# If background rescanning is disabled, a scan can still be forced from the 
# "status" page of the administrative web interface
#
# Note that right now this is considered EXPERIMENTAL!
#
# Setting a rescan_interval lower than the time it takes to rescan
# won't hurt anything, it will just waste CPU, and make connect times
# to the daap server longer.
#

#rescan_interval 600

diff -Naur clamav-0.87.1/configure.in clamav/configure.in
--- clamav-0.87.1/configure.in	2005-11-03 21:43:17.000000000 +0100
+++ clamav/configure.in	2005-12-21 10:22:50.937043880 +0100
@@ -55,7 +55,9 @@
 AC_FUNC_FSEEKO
 
 dnl Check for broken snprintf (code by Phil Oleson <oz*nixil.net>)
-if test "x$ac_cv_func_snprintf" = "xyes" ; then
+if test "x$cross_compiling" = "xyes"; then
+	AC_MSG_WARN([Cross compiling: snprintf not tested])
+else if test "x$ac_cv_func_snprintf" = "xyes" ; then
         AC_MSG_CHECKING([whether snprintf correctly terminates long strings])
         AC_TRY_RUN(
                 [
@@ -70,6 +72,7 @@
                 ]
         )
 fi
+fi
 
 have_pthreads=no
 AC_CHECK_HEADER(pthread.h,[have_pthreads=yes],)
@@ -153,7 +156,12 @@
 [  --disable-clamuko	  disable clamuko support (Linux, DragonFly and FreeBSD only)],
 want_clamuko=$enableval, want_clamuko="yes")
 
-AC_FUNC_SETPGRP
+if test "x$cross_compiling" = "xyes"; then
+	AC_MSG_WARN([Cross compiling: setpgrp not tested])
+	ac_cv_func_setpgrp_void=yes
+else
+	AC_FUNC_SETPGRP
+fi
 
 AC_ARG_ENABLE(milter,
 [  --enable-milter	  build clamav-milter],
@@ -193,6 +201,10 @@
     AC_CHECK_LIB(gmp, __gmpz_init, [LIBCLAMAV_LIBS="$LIBCLAMAV_LIBS -lgmp"; AC_DEFINE(HAVE_GMP,1,have gmp installed)], [AC_CHECK_LIB(gmp, mpz_init, [LIBCLAMAV_LIBS="$LIBCLAMAV_LIBS -lgmp"; AC_DEFINE(HAVE_GMP,1,have gmp installed)], AC_MSG_WARN([****** GNU MP 2 or newer NOT FOUND - digital signature support will be disabled !]); want_dsig="no")])
 fi
 
+if test "x$cross_compiling" = "xyes"
+then
+	AC_MSG_WARN([Cross compiling: libcurl not tested])
+else
 dnl libcurl
 AC_ARG_WITH(libcurl,
 [  --with-libcurl	  support URLs downloading with libcurl (default=no)],
@@ -237,6 +249,7 @@
 	AC_MSG_WARN([curl-config was not found])
     fi
 fi
+fi
 
 AC_ARG_ENABLE(pthreads,
 [  --disable-pthreads      disable POSIX threads support],
@@ -330,19 +343,27 @@
 AC_SUBST(CFGDIR)
 AC_DEFINE_UNQUOTED(CONFDIR,"$cfg_dir",[where to look for the config file])
 
+if test "x$cross_compiling" = "xyes"; then
+	AC_MSG_WARN([Cross compiling: in_port_t not tested])
+else
 dnl check for in_port_t definition
 AC_TRY_RUN([
 #include <sys/types.h>
 #include <netinet/in.h>
 int main(int argc, char **argv) { in_port_t pt; pt = 0; return pt; }
 ], AC_DEFINE(HAVE_IN_PORT_T,1,[in_port_t is defined]), AC_MSG_RESULT(in_port_t is not defined))
+fi
 
+if test "x$cross_compiling" = "xyes"; then
+	AC_MSG_WARN([Cross compiling:  in_addr_t not tested])
+else
 dnl check for in_addr_t definition
 AC_TRY_RUN([
 #include <sys/types.h>
 #include <netinet/in.h>
 int main(int argc, char **argv) { in_addr_t pt; pt = 0; return pt; }
 ], AC_DEFINE(HAVE_IN_ADDR_T,1,[in_addr_t is defined]), AC_MSG_RESULT(in_addr_t is not defined))
+fi
 
 case "$target_os" in
 linux*)
@@ -602,6 +623,9 @@
 dnl Check if we can do fd passing
 dnl Submitted by Richard Lyons <frob-clamav@webcentral.com.au>
 AC_CHECK_FUNCS(recvmsg sendmsg)
+if test "x$cross_compiling" = "xyes"; then
+	AC_MSG_WARN([Cross compiling: msg_accrights not tested])
+else
 AC_CACHE_CHECK([for msg_accrights field in struct msghdr],
 	ac_cv_have_accrights_in_msghdr, [
     AC_TRY_RUN(
@@ -649,6 +673,7 @@
 if test "x$ac_cv_have_control_in_msghdr" = "xyes" ; then
     AC_DEFINE(HAVE_CONTROL_IN_MSGHDR,1,[ancillary data style fd pass])
 fi
+fi
 
 dnl tcpwrappers support
 dnl rules from http://ma.ph-freiburg.de/tng/tng-technical/2002-01/msg00094.html

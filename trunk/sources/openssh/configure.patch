--- openssh-3.8p1/configure.ac.orig	2004-02-23 22:47:04.000000000 -0700
+++ openssh-3.8p1/configure.ac	2004-03-19 01:41:47.000000000 -0700
@@ -481,6 +481,9 @@
 	[
 		AC_MSG_RESULT(no)
 		AC_MSG_ERROR([*** compiler cannot create working executables, check config.log ***])
+	],
+	[AC_MSG_RESULT(yes)
+	AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 	]
 )
 
@@ -632,6 +635,9 @@
 	  else
 		AC_MSG_WARN([zlib version may have security problems])
 	  fi
+	],
+	[AC_MSG_RESULT(yes)
+	AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 	]
 )
 
@@ -696,6 +702,9 @@
 	[
 		AC_MSG_RESULT(no)
 		AC_DEFINE(BROKEN_ONE_BYTE_DIRENT_D_NAME)
+	],
+	[AC_MSG_RESULT(yes)
+	AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 	]
 )
 
@@ -727,6 +736,9 @@
 				[
 					AC_MSG_RESULT(no)
 					AC_MSG_ERROR([** Incomplete or missing s/key libraries.])
+				],
+				[AC_MSG_RESULT(yes)
+				AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 				])
 		fi
 	]
@@ -840,7 +852,11 @@
 		],
 		[AC_MSG_RESULT(yes)],
 		[AC_DEFINE(BROKEN_SETRESUID)
-		 AC_MSG_RESULT(not implemented)]
+		 AC_MSG_RESULT(not implemented)
+		 ],
+		 [AC_MSG_RESULT(yes)
+		 AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
+		 ]
 	)
 ])
 
@@ -854,7 +870,11 @@
 		],
 		[AC_MSG_RESULT(yes)],
 		[AC_DEFINE(BROKEN_SETRESGID)
-		 AC_MSG_RESULT(not implemented)]
+		 AC_MSG_RESULT(not implemented)
+		 ],
+		 [AC_MSG_RESULT(yes)
+		 AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
+		 ]
 	)
 ])
 
@@ -890,6 +910,9 @@
 			AC_MSG_RESULT(no)
 			AC_DEFINE(BROKEN_SNPRINTF)
 			AC_MSG_WARN([****** Your snprintf() function is broken, complain to your vendor])
+		],
+		[AC_MSG_RESULT(yes)
+		AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 		]
 	)
 fi
@@ -963,7 +986,10 @@
 		[
 			AC_MSG_RESULT(no)
 			AC_DEFINE(SSHD_ACQUIRES_CTTY)
-		]
+		],
+		 [AC_MSG_RESULT(yes)
+		 AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
+		 ]
 	)
 fi
 
@@ -1096,6 +1122,10 @@
 	[
 		AC_MSG_RESULT(not found)
 		AC_MSG_ERROR(OpenSSL version header not found.)
+	],
+	[
+		ssl_header_ver="0x0090704fL (OpenSSL 0.9.7d 17 Mar 2004)"
+		AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to $ssl_header_ver])
 	]
 )
 
@@ -1129,6 +1159,10 @@
 	[
 		AC_MSG_RESULT(not found)
 		AC_MSG_ERROR(OpenSSL library not found.)
+	],
+	[
+		ssl_header_ver="0x0090704fL (OpenSSL 0.9.7d 17 Mar 2004)"
+		AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to $ssl_library_ver])
 	]
 )
 
@@ -1148,7 +1182,11 @@
 		AC_MSG_ERROR([Your OpenSSL headers do not match your library.
 Check config.log for details.
 Also see contrib/findssl.sh for help identifying header/library mismatches.])
-	]
+	],
+	[
+		AC_MSG_RESULT(yes)
+		AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
+  	]
 )
 
 # Some systems want crypt() from libcrypt, *not* the version in OpenSSL,
@@ -1183,6 +1221,11 @@
 		# Default to use of the rand helper if OpenSSL doesn't
 		# seed itself
 		USE_RAND_HELPER=yes
+	],
+	[
+		OPENSSL_SEEDS_ITSELF=yes
+		AC_MSG_RESULT(yes)
+		AC_MSG_WARN([Cannot run test when crosscompiling, defaulted to yes.])
 	]
 )
 
@@ -1773,7 +1816,8 @@
 #else
 main() { exit(0); }
 #endif
-		], [ true ], [ AC_DEFINE(BROKEN_SNPRINTF) ]
+		], [ true ], [ AC_DEFINE(BROKEN_SNPRINTF) ],
+		[ true ]
 	)
 fi
 
@@ -1893,6 +1937,7 @@
 }
 		],
 		[ ac_cv_have_accrights_in_msghdr="yes" ],
+		[ ac_cv_have_accrights_in_msghdr="no" ],
 		[ ac_cv_have_accrights_in_msghdr="no" ]
 	)
 ])
@@ -1917,7 +1962,8 @@
 }
 		],
 		[ ac_cv_have_control_in_msghdr="yes" ],
-		[ ac_cv_have_control_in_msghdr="no" ]
+		[ ac_cv_have_control_in_msghdr="no" ],
+		[ ac_cv_have_control_in_msghdr="yes" ]
 	)
 ])
 if test "x$ac_cv_have_control_in_msghdr" = "xyes" ; then
@@ -2229,12 +2275,9 @@
 		)
 	fi
 fi
-AC_CHECK_FILE("/dev/ptc",
-	[
-		AC_DEFINE_UNQUOTED(HAVE_DEV_PTS_AND_PTC)
-		have_dev_ptc=1
-	]
-)
+AC_MSG_CHECKING([for "/dev/ptc"])
+AC_MSG_RESULT(no)
+have_dev_ptc=0
 
 # Options from here on. Some of these are preset by platform above
 AC_ARG_WITH(mantype,
@@ -2329,15 +2372,8 @@
 fi
 
 # check for /etc/default/login and use it if present.
-AC_ARG_ENABLE(etc-default-login,
-	[  --disable-etc-default-login       Disable using PATH from /etc/default/login [no]],,
-[
-AC_CHECK_FILE("/etc/default/login", [ external_path_file=/etc/default/login ])
-
-if test "x$external_path_file" = "x/etc/default/login"; then
-	AC_DEFINE(HAVE_ETC_DEFAULT_LOGIN)
-fi
-])
+AC_MSG_CHECKING([for "/etc/default/login"])
+AC_MSG_RESULT(no)
 
 dnl BSD systems use /etc/login.conf so --with-default-path= has no effect
 if test $ac_cv_func_login_getcapbool = "yes" -a \

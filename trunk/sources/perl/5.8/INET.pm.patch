Taken from http://oinkzwurgl.org/downloads/ssods/src/
diff -ur ext/IO/lib/IO/Socket/INET.pm perl-5.8.8/ext/IO/lib/IO/Socket/INET.pm
--- ext/IO/lib/IO/Socket/INET.pm	2005-09-06 09:11:32.000000000 +0000
+++ ext/IO/lib/IO/Socket/INET.pm	2008-08-04 21:43:14.000000000 +0000
@@ -15,7 +15,7 @@
 use Errno;
 
 @ISA = qw(IO::Socket);
-$VERSION = "1.29";
+$VERSION = "1.31";
 
 my $EINVAL = exists(&Errno::EINVAL) ? Errno::EINVAL() : 1;
 
@@ -25,6 +25,11 @@
 		    udp  => SOCK_DGRAM,
 		    icmp => SOCK_RAW
 		  );
+my %proto_number;
+$proto_number{tcp}  = Socket::IPPROTO_TCP()  if defined &Socket::IPPROTO_TCP;
+$proto_number{udp}  = Socket::IPPROTO_UDP()  if defined &Socket::IPPROTO_UDP;
+$proto_number{icmp} = Socket::IPPROTO_ICMP() if defined &Socket::IPPROTO_ICMP;
+my %proto_name = reverse %proto_number;
 
 sub new {
     my $class = shift;
@@ -32,30 +37,60 @@
     return $class->SUPER::new(@_);
 }
 
+sub _cache_proto {
+    my @proto = @_;
+    for (map lc($_), $proto[0], split(' ', $proto[1])) {
+	$proto_number{$_} = $proto[2];
+    }
+    $proto_name{$proto[2]} = $proto[0];
+}
+
+sub _get_proto_number {
+    my $name = lc(shift);
+    return undef unless defined $name;
+    return $proto_number{$name} if exists $proto_number{$name};
+
+    my @proto = getprotobyname($name);
+    return undef unless @proto;
+    _cache_proto(@proto);
+
+    return $proto[2];
+}
+
+sub _get_proto_name {
+    my $num = shift;
+    return undef unless defined $num;
+    return $proto_name{$num} if exists $proto_name{$num};
+
+    my @proto = getprotobynumber($num);
+    return undef unless @proto;
+    _cache_proto(@proto);
+
+    return $proto[0];
+}
+
 sub _sock_info {
   my($addr,$port,$proto) = @_;
   my $origport = $port;
-  my @proto = ();
   my @serv = ();
 
   $port = $1
 	if(defined $addr && $addr =~ s,:([\w\(\)/]+)$,,);
 
   if(defined $proto  && $proto =~ /\D/) {
-    if(@proto = getprotobyname($proto)) {
-      $proto = $proto[2] || undef;
-    }
-    else {
+    my $num = _get_proto_number($proto);
+    unless (defined $num) {
       $@ = "Bad protocol '$proto'";
       return;
     }
+    $proto = $num;
   }
 
   if(defined $port) {
     my $defport = ($port =~ s,\((\d+)\)$,,) ? $1 : undef;
     my $pnum = ($port =~ m,^(\d+)$,)[0];
 
-    @serv = getservbyname($port, $proto[0] || "")
+    @serv = getservbyname($port, _get_proto_name($proto) || "")
 	if ($port =~ m,\D,);
 
     $port = $serv[2] || $defport || $pnum;
@@ -64,8 +99,7 @@
 	return;
     }
 
-    $proto = (getprotobyname($serv[3]))[2] || undef
-	if @serv && !$proto;
+    $proto = _get_proto_number($serv[3]) if @serv && !$proto;
   }
 
  return ($addr || undef,
@@ -81,7 +115,7 @@
       local($!);
       my $title = ref($sock).": ";
       $@ = join("", $_[0] =~ /^$title/ ? "" : $title, @_);
-      close($sock)
+      $sock->close()
 	if(defined fileno($sock));
     }
     $! = $err;
@@ -129,10 +163,9 @@
 			or return _error($sock, $!, $@);
     }
 
-    $proto ||= (getprotobyname('tcp'))[2];
+    $proto ||= _get_proto_number('tcp');
 
-    my $pname = (getprotobynumber($proto))[0];
-    $type = $arg->{Type} || $socket_type{lc $pname};
+    $type = $arg->{Type} || $socket_type{lc _get_proto_name($proto)};
 
     my @raddr = ();
 

--- pixman/pixman/pixman-arm-simd.c.orig	2009-06-22 13:40:26.000000000 -0700
+++ pixman/pixman/pixman-arm-simd.c	2009-07-01 16:42:03.000000000 -0700
@@ -219,7 +219,7 @@
     fbComposeGetStart (pDst, xDst, yDst, uint32_t, dstStride, dstLine, 1);
     fbComposeGetStart (pSrc, xSrc, ySrc, uint32_t, srcStride, srcLine, 1);
 
-    _pixman_image_get_solid (pMask, mask, pDst->bits.format);
+    _pixman_image_get_solid (pMask, pDst->bits.format);
     mask = (mask) >> 24;
 
     while (height--)
@@ -323,7 +323,7 @@
     int		 dstStride, maskStride;
     uint16_t	 w;
 
-    _pixman_image_get_solid(pSrc, src, pDst->bits.format);
+    _pixman_image_get_solid(pSrc, pDst->bits.format);
 
     srca = src >> 24;
     if (src == 0)
--- pixman/pixman/pixman-arm-neon.c.orig	2009-06-22 13:40:26.000000000 -0700
+++ pixman/pixman/pixman-arm-neon.c	2009-07-01 16:42:48.000000000 -0700
@@ -461,7 +461,7 @@
     fbComposeGetStart (pDst, xDst, yDst, uint32_t, dstStride, dstLine, 1);
     fbComposeGetStart (pSrc, xSrc, ySrc, uint32_t, srcStride, srcLine, 1);
 
-    _pixman_image_get_solid (pMask, mask, pDst->bits.format);
+    _pixman_image_get_solid (pMask, pDst->bits.format);
     mask_alpha = vdup_n_u8((mask) >> 24);
 
     if (width>=8)
@@ -658,7 +658,7 @@
     uint8x8_t    mask_selector=vreinterpret_u8_u64(vcreate_u64(0x0101010100000000ULL));
     uint8x8_t    alpha_selector=vreinterpret_u8_u64(vcreate_u64(0x0707070703030303ULL));
 
-    _pixman_image_get_solid(pSrc, src, pDst->bits.format);
+    _pixman_image_get_solid(pSrc, pDst->bits.format);
 
     srca = src >> 24;
     if (src == 0)
@@ -863,7 +863,7 @@
 
     fbComposeGetStart (pDst, xDst, yDst, uint8_t, dstStride, dstLine, 1);
     fbComposeGetStart (pMask, xMask, yMask, uint8_t, maskStride, maskLine, 1);
-    _pixman_image_get_solid (pSrc, src, pDst->bits.format);
+    _pixman_image_get_solid (pSrc, pDst->bits.format);
     sa = vdup_n_u8((src) >> 24);
 
     if (width>=8)
@@ -1734,7 +1734,7 @@
 	uint32_t     kernelCount, copyCount;
 	uint8_t      kernelOffset, copyOffset;
 
-	_pixman_image_get_solid(pSrc, src, pDst->bits.format);
+	_pixman_image_get_solid(pSrc, pDst->bits.format);
 
 	// bail out if fully transparent or degenerate
 	srca = src >> 24;
@@ -1875,7 +1875,7 @@
 	uint32_t     kernelCount, copyCount;
 	uint8_t      kernelOffset, copyOffset;
 
-	_pixman_image_get_solid(pSrc, src, pDst->bits.format);
+	_pixman_image_get_solid(pSrc, pDst->bits.format);
 
 	// bail out if fully transparent
 	srca = src >> 24;

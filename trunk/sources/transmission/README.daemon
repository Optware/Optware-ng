README.daemon

CGI interface to daemon is for managing and preview of the daemon state.
There is also torrent_watchdog script for automatic torrent
queue processing and mail notification.

Features

* batch multiprocessing (eg. 10 torrents simultaneously with nice priority)
* automatic seeding when torrent finishes (configurable)
* configurable ports
* WWW interface transmission.cgi can be public (no password) as
   there is no delete provided.
* Accelerator keys (ALT-key) for CGI interface. See help for underlined keys.
* Per torrent and cumulative status
* start/stop/push and other commands available in WWW interface
* lightweight - low memory footprint
* tracker scrape info. Suggest best seed torrent from target dir.
* watchdog for auto restart/queue processing with cron
* syslog watchdog events
* mail notify when torrent finishes
* no state database required. Directory tree is database (slow, but fail-safe)
* stable and portable. Developed on Asus WL-500g Deluxe with Oleg firmware 

Workflow

For queue torrent file processing there should exist tree directories:
source - User should copy .torrent files here
work   - Used for torrent processing
target - Place where finished torrents are put

Typical file flow is source -> work -> target For every torrent file from
source, directory with the same name is created. Then torrent file is moved
into this directory and transmissiond is run in background and constantly
supervised with transmission_watchdog. The only way for moving finished 
active torrent into target dir is with Watchdog and not with Push. 

CGI interface to daemon after each command lists all torrents in database.
This time consuming can be interrupted at any time by giving next command
or pressing stop button in WWW browser. This can be done for all commands
except URL, Note and Rename as the action on torrent is taken during
listing. This means that listing should not be interrupted until torrent is
listed. In general there is no problem of interrupting listing at any
point. This will not invalidate database which is file system alone.

Fetch command is useful only for fetching torrent files without passkey as
there is no possibility to pass cookies to server. Use with care. Proper 
fetch would be "download in browser and then upload to server". 
This can only be done by browser plugin.

Troubles with tracker communication can be seen in syslog file. There is 
no association of active thread and reported problem from tracker. User should
resolve this alone.


Before running transmission user should carefully inspect variables in
transmission.conf and create SOURCE, WORK, and TARGET directories

transmission_watchdog cares for queue processing and should be run every
30 minutes with cron. /opt/etc/crontab entry should look like:

# m  h dom mon dow user command
*/30 *    * * *   admin nice transmission_watchdog 

For graphing to work properly, gnuplot and syslog is required. As log can
accumulate it is recommended that logrotate is used for flushing old logs.
/opt/etc/logrotate.conf recommended config is:
compress

/opt/var/log/messages {
        size 1024k
        weekly
        rotate 9
        postrotate
#               /bin/killall syslogd
#               /bin/killall klogd
        endscript
}

include /opt/etc/logrotate.d

For syslog on Asus - Oleg firmware it is recommended that
/opt/etc/init.d/S05syslogd is created with the following content:

#!/bin/sh
#
# Startup script for syslogd
#
# Stop myself if running
if [ -n "`pidof syslogd`" ]; then
    /bin/killall syslogd 2>/dev/null
fi

/sbin/syslogd -m 0 -O /opt/var/log/messages -S -l 7



There is a bug in libtransmission/ratecontrol.c which causes segmentation
faults in daemon. To disable rate control set upload/download limit to -1
in transmission.conf

At present libbt utilities are used for scrape and metainfo due to
libtransmissiom bug in scrape retrieval.

HOME variable is used for daemon to find its .transmission directory where
cache data for each torrent is stored for fast resume. Proper restore
requires that system time is functioning as file mtime is checked. Assure
that time sync is retrieved with ntp or RTC.

Visit http://transmission.m0k.org/forum/viewtopic.php?p=4871#4871 for more
info.

Troubleshooting daemon & CGI interface

Very helpful command for debugging shell script is "sh -x
/opt/share/www/cgi-bin/transmission.cgi" This will print out every line and
its content.

I suggest to install procps package and then use
/opt/bin/ps axf to see output like this:

9179 ? SNs 0:01 transmissiond -p 65534 -w 600 -u -1 -d -1 -i ..
9180 ? SN  0:00  \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i  ...
9181 ? SN  0:00      \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i ..
9184 ? SN  0:03      \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i  .
9185 ? RN 17:43      \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i /opt/..
9186 ? RN  0:38      \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i /opt/var..
9187 ? RN  0:40      \_ transmissiond -p 65534 -w 600 -u -1 -d -1 -i /opt/var/run/transmission.pid /tmp

Master thread in above example has PID=9179 Sending "kill -USR1 9197" must
write .status files. This should also be done by CGI.

There is also -USR2 signal which writes active torrents into syslog. But
syslog must be running also for getting cumulative statistics!

.status file is sourced. Filenames should not contain non ASCII characters
and quote. Spaces and characters like [](). are allowed in torrent filenames.
Note that NO spaces is allowed for directories ${SOURCE}, ${WORK} and ${TARGET}.

When one press "Update" button. Signal -USR1 is sent to daemon and after a
second of waiting for it, all active .status files are sourced and printed.

Problems with .status could be that transmisisond is not receiving USR1 signal.
This may be due to invalid path to PIDFILE or something like that. 
Pressing Update sends signal to daemon, waits one second and reads 
.status files in active torrent directories. Take attention to syslog daemon.

"torrent" package conflict is intentional. If you gonna use scrape or info, 
then you need also libbt package. If you want transfer graph log then 
gnuplot must be installed.


Known bugs:
* There is a problem with fork and pthreads in uclibc 0.9.19
  See http://www.busybox.net/lists/uclibc/2003-March/005825.html
  This affect only users of Oleg firmware on Asus routers with
  http://ipkg.nslu2-linux.org/feeds/optware/wl500g/cross/stable/
  package feed. Users are instructed to switch to
  http://ipkg.nslu2-linux.org/feeds/optware/oleg/cross/stable/
  which uses newer uClibc 0.9.28 and NLPT or change transmission_watchdog
  daemon startup code to 

  nohup transmissiond -v 1 -p ${LISTENING_PORT} \
        -w ${WATCHDOG} \
        -u ${UPLOAD_SPEED} \
        -d ${DOWNLOAD_SPEED} \
        -i ${PIDFILE}   ${ACTIVE} 2> /dev/null &

  which will spawn daemon in foreground mode and trash error messages.

  See http://wl500g.info/showpost.php?p=34579&postcount=68 how to upgrade
  to alternative "Oleg"  package feed.

FAQ
1. Why wont the daemon start downloading after rebooting ? I need to push it to suspend and then again to make it work ? 
It will restart after reboot if you properly configured cron to run transmisison_watchdog periodicly. For manual restart use Watchdog button.

2. How do i make it download 5 torrents at the same time ?  Can this be done ?
Sure it can. Use Push button. You can also queue torrents, manual administer and get some transfer graph.

3. Is it possible to output a chart with no_UTC time (X-axis) ? 
Just set TIMEZONE_OFFSET=seconds in transmission.conf 

4. I just installed transmission package, pushed some torrent and it looks working.  But when I press Update button, I get this result: ".status not found for <torrent_path>"
Problems with .status could be that transmisisond is not receiving USR1 signal. This may be due to invalid path to PIDFILE or something like that. Pressing Update sends signal to daemon, waits one second and reads .status files in active torrent directories. Take attention to syslog daemon.

5. Do I need "torrent" ipkg installed too?
No. torrent package conflict is intentional. 
oleo

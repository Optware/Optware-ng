README.daemon

CGI interface to daemon is for managing and preview of the daemon state.
There is also torrent_watchdog script for automatic torrent
queue processing and mail notification.

Features

* batch multiprocessing (eg. 10 torrents simultaneously with nice priority)
* automatic seeding when torrent finishes (configurable)
* configurable ports
* WWW interface transmission.cgi can be public (no password) as
   there is no delete provided.
* Accelerator keys (ALT-key) for CGI interface. See help for underlined keys.
* Per torrent and cumulative status
* start/stop/push and other commands avalable in WWW interface
* lightweight - low memory footprint
* tracker scrape info. Suggest best seed torrent from target dir.
* watchdog for auto restart/queue processing with cron
* syslog watchdog events
* mail notify when torrent finishes
* no state database required. Directory tree is database (slow, but failsafe)
* stable and portable. Deloped on Asus WL-500g Deluxe

Workflow

For queue torrent file processing there should exist tree directories:
source - User should copy .torrent files here
work   - Used for torrent processing
target - Place where finished torrents are put

Typical file flow is source -> work -> target For every torrent file from
source, directory with the same name is created. Then torrent file is moved
into this directory and transmissiond is run in background and constantly
supervised with transmission_watchdog.

Before running transmission user should carefully inspect variables in
transmission.conf and create SOURCE, WORK, and TARGET directories

transmission_watchdog cares for queue processing and should be run every
30 minutes with cron. /opt/etc/crontab entry should look like:

# m  h dom mon dow user command
*/30 *    * * *   admin nice transmission_watchdog 

For graphing to work properly, gnuplot and syslog is required. As log can
accumulate it is recommended that logrotate is used for flushing old logs.
logrotate.conf recommended config is:
compress

/opt/var/log/messages {
        size 1024k
        weekly
        rotate 9
        postrotate
#               /bin/killall syslogd
#               /bin/killall klogd
        endscript
}

include /opt/etc/logrotate.d


There is a bug in libtransmission/ratecontrol.c which causes segmentation
faults in daemon. To disable rate control set upload/download limit to -1
in transmission.conf

At present libbt utilities are used for scrape and metainfo due to
libtransmissiom bug in scrape retrieval.

Visit http://transmission.m0k.org/forum/viewtopic.php?p=4871#4871 for more
info.


Known bugs:
* There is a problem with fork and pthreads in uclibc 0.9.19
  See http://www.busybox.net/lists/uclibc/2003-March/005825.html
  This affect only users of Oleg firmware on Asus routers with
  http://ipkg.nslu2-linux.org/feeds/optware/wl500g/cross/stable/
  package feed. Users are instructed to switch to
  http://ipkg.nslu2-linux.org/feeds/optware/oleg/cross/stable/
  which uses newer uClibc 0.9.28 and NLPT or change transmission_watchdog
  daemon startup code to 

  nohup transmissiond -v 1 -p ${LISTENING_PORT} \
        -w ${WATCHDOG} \
        -u ${UPLOAD_SPEED} \
        -d ${DOWNLOAD_SPEED} \
        -i ${PIDFILE}   ${ACTIVE} 2> /dev/null &

  which will spawn daemon in foreground mode and trash error messages.

  See http://wl500g.info/showpost.php?p=34579&postcount=68 how to upgrade
  to alternative "Oleg"  package feed.
  
oleo

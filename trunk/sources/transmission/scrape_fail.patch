This patch disables further torrent scraping if received 4xx response code

See http://wiki.theory.org/BitTorrentSpecification#Tracker_.27scrape.27_Convention
and http://www.w3.org/Protocols/HTTP/HTRESP.html

--- transmission/libtransmission/http.h.orig	2006-12-07 14:10:17.000000000 +0100
+++ transmission/libtransmission/http.h	2006-12-07 14:11:50.000000000 +0100
@@ -36,9 +36,11 @@
 /* Return the HTTP status code for the response, or -1 for parse error */
 int         tr_httpResponseCode( const char * data, int len );
 
-#define TR_HTTP_STATUS_OK( st )       ( 200 <= (st) && 299 >= (st) )
-#define TR_HTTP_STATUS_REDIRECT( st ) ( 300 <= (st) && 399 >= (st) )
-#define TR_HTTP_STATUS_FAIL( st )     ( 400 <= (st) && 599 >= (st) )
+#define TR_HTTP_STATUS_OK( st )           ( 200 <= (st) && 299 >= (st) )
+#define TR_HTTP_STATUS_REDIRECT( st )     ( 300 <= (st) && 399 >= (st) )
+#define TR_HTTP_STATUS_FAIL( st )         ( 400 <= (st) && 599 >= (st) )
+#define TR_HTTP_STATUS_FAIL_CLIENT( st )  ( 400 <= (st) && 499 >= (st) )
+#define TR_HTTP_STATUS_FAIL_SERVER( st )  ( 500 <= (st) && 599 >= (st) )
 
 /*
   Parse an HTTP request or response, locating specified headers and
--- transmission/libtransmission/tracker.c.orig	2006-12-07 14:10:36.000000000 +0100
+++ transmission/libtransmission/tracker.c	2006-12-07 14:32:22.000000000 +0100
@@ -648,6 +648,8 @@
     {
         /* we didn't get a 2xx status code */
         tr_err( "Scrape: invalid HTTP status code: %i", code );
+        if ( TR_HTTP_STATUS_FAIL_CLIENT( code ) )
+          tc->tor->scrape[0] = '\0';
         tc->lastScrapeFailed = 1;
         return;
     }

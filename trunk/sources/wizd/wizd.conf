## ===========================================================================
## wizd.conf
## wizd -- MediaWiz Server Daemon.  config file.
## ===========================================================================


## Enable/disable debug log output
flag_debug_log_output	false
debug_log_filename	/opt/var/log/wizd_debug.log


## (Daemon conversion)
##  This flag controls whether the server runs as a hidden application
##  or if it runs with a console window
##  hidden:   true  (default)
##  console:  false
flag_daemon	false



## ==============================
##  =  HTTP processing section setting
## ==============================


## Base location for your media files
document_root	/opt/share/wizd/docroot

## Aliases show up in the base location as virtual folders
## When selected they get redirected to the path you enter here
## Format:   alias  [name]  [path]
## Under Windows, "/cygdrive/c/" and "c:\" are equivalent
## You can list up to 16 aliases here
## alias: allplay will play whatever files are present
## moviealias: allplay defaults to video playlists
## musicalias: allplay defaults to music playlists
## photoalias: allplay defaults to photo playlists
## secretalias: like a secret directory, but can take an absolute path
##              and the 3-digit code can be used from any directory

#alias	     DVD	/share/hdd/data/DVD
#alias	     Internet	/share/hdd/data/favourites
#moviealias  HDTV	/share/hdd/data/movie
#musicalias  Music	/share/hdd/data/music
#photoalias  Photos	/share/hdd/data/photo

## Enable this flag to allow file deletion from the LinkPlayer
## To delete files, press the "setup" button on your remote TWICE
## To exit from the delete mode (red screen), press the "stop" button
##
##  false:   no file deletion allowed
##  true:    can delete files from the client - Use with caution!!!
flag_allow_delete	false

## server listening Port (default:8000)
## Choose a number other than 8000 if you want to run
## both wizd and Link Server at the same time
server_port	8004

## Enable this flag to default the directory display to thumbnail mode
## If this flag is false, then it will default to the details listing mode
## (note this setting may be overridden in the skin configuration)
flag_default_thumb False

## Set desired size for resized jpeg images
## Set these to control the resolution of jpeg images sent from wizd
## The width and height set the target screen size
## The widen_ratio sets the pre-distortion to compensate for
## screen distortion on the client (the LinkPlayer2)
## The LinkPlayer2 in 4:3 mode uses bitmap size 720x480, or 3:2
## (3/2)*1.125 = (4/3), widen_ratio 1.125 corrects the aspect ratio
## Note: JPEG file sizes should be a multiple of 16, so 1088 is better than 1080
## allow_crop will crop up to the specified percentage from the top/bottom
## of the picture to fill up more of a 16:9 screen
##    12% is the equivalent of the cropping on a 4x6 photo
##    33% will make a digital photo fill the width of a 16:9 screen

## For 4:3 480i or 480p output
#target_jpeg_width 720
#target_jpeg_height 480
#widen_ratio 1.125

## For 720p output
#target_jpeg_width 1280
#target_jpeg_height 720
#widen_ratio 1
#allow_crop 12

## For 1080i output
target_jpeg_width	1920
target_jpeg_height	1088
widen_ratio	1
allow_crop	12

## Set this true to enable slide label display during slideshows
flag_slide_show_labels	false

## Set the desired slideshow duration per slide, in seconds
slide_show_seconds	10

## Set this to eliminate small thumbnail JPEG images from the slideshows
minimum_jpeg_size	50000

## Access control IP (up to 32 lines)
##  Only allow access from the addresses which are listed
##  If there is no setting, all addresses are accepted
##  The first set of numbers is the network address
##  The second set of numbers is the netmask
#access_allow	192.168.0.0/255.255.255.0
#access_allow	192.168.1.0/255.255.255.0


## User-Agent access control permission setting (to 32 lines)
##   When defined, only the listed User-Agents are accepted
##   If there is no setting, all User-Agents are accepted
#allow_user_agent	Syabas
#allow_user_agent	Mozilla



## ===================================
##  =  Indication department setting
## ===================================

## The language code of the LinkPlayer
## This is the screen character code setting on the LinkPlayer side.
## If this setting doesn't match the LinkPlayer setting,
## then the characters displayed on the screen will be incorrect.
## This setting affects non-english characters such as umlauts
## and accents, in addition to supporting Japanese characters.
## If you select "disabled" then there will be no conversion made.
##
##     Shift JIS:sjis (default) Japanese code for encoding char
##     EUC:      euc  (Extended Unix Code)
##     UTF-8     utf8
##     UTF-16    utf16
##     Windows   windows
##     Unix      unix
##     no conversion:   disabled
client_language_code	disabled


## The language code on the Server side (OS side)
## This is the screen character code setting for you server (Operating System)
## If this setting doesn't match the character set used by your server,
## then he characters displayed on the screen will be incorrect.
## This setting affects non-english characters such as umlauts
## and accents, in addition to supporting Japanese characters.
## If you select "disabled" then there will be no conversion made.
##
##      default:  auto         (default)   (Automatic operation decision :)
##      Japanese: sjis         (Shift JIS, not recommended. use AUTO)
##      EUC:       euc          (Extended Unix Code)
##      UTF-8      utf8         (Recommended for MacOSX/Fedora)
##      UTF-16     utf16        (Not tested. Might not work)
##      no conversion:  disabled
server_language_code	disabled



## Skin settings.  This enabled the use of "skins" to change the appearance
## of the program on your LinkPlayer screen.  You can modify the background
## image, the font sizes, and the organization of the information displayed.
##     true: skin used
##     false (default): no skin used
flag_use_skin	true


## Skin root is the base directory location where the skin files are stored.
## Skin name is the subdirectory under skin_root for the selected skin.
##  When using skins, if these directories do not exist, the server will 
##  close immediately.
skin_root	/opt/share/wizd/skin
skin_name	linkplayer_hires

## Define alternate skin names which are selected based on the User-Agent string
## When the "Res624x416" string is matched, the "linkplayer" skin will be used
## You can use any match string up to 64 characters long, and can include spaces
## The match must be an exact match (case included) to a substring in the User-Agent
## You can use this to use different skins for different player types,
## or different skins for SD and HD browser modes
## or different skins for different firmware versions
## or even different skins for different players 
##  (since the User-Agent string contains the unique MAC address of the player)
## Turn on the debug log, and look in wizd_debug.log to see what your User-Agent string is
alternate_skin	linkplayer		Res624x416
alternate_skin	linkplayer_hires	Res1104x656
alternate_skin	linkplayer_hires	Mozilla


## Rule setting of file sort with menu
##      none (default)  (no sorting)
##      name_up   	Name (ascending order)
##      name_down  	Name (descending order)
##      time_up		Date (ascending order)
##      time_down	Date (descending order)
##      size_up		Size (ascending order)
##      size_down 	Size (descending order)
sort_rule	name_up


## The number of lines of page 1 of menu screen.
## (default: 14)
## (note this setting is usually overridden in the skin configuration)
#page_line_max	14


## MAX length of displayed file name [ byte ] (excluding the extension)
## Filenames longer than this limit will still work, but on the screen
## they will be truncated so that they fit the screen.
##      default:  (no restriction)
## (note this setting is usually overridden in the skin configuration)
#menu_filename_length_max	40


## Enable CAP/HEX encoding for use with samba
## ":A2:97:b7:97:a7:82:bf:a3.avi" for example.
## [ Note ] use with "server_language_code AUTO"
## [ Note ] Samba is a Linux program that simulates Windows File Sharing
##
##      enabled      true 
##      disable      false(default)
#flag_decode_samba_hex_and_cap	true


##  Hiding unknown file extensions
##  When this setting is enabled, then any extensions which are not
##  recognized by the program will be hidden, and will not be displayed
##  on the LinkPlayer.  If you disable this setting, then you will
##  be able to see all files, including the the files which you cannot play.
##    hide:        true        (default)
##    don't hide:  false 
flag_unknown_extention_file_hide	true


## With file name, the parts surrounded by () [ ] are deleted
## (As for deletion object only half angle parenthesis)
## [ Example ] "masterpiece drama [ DivX5.05 ] (2).avi" -> "masterpiece drama.avi"
##    enabled:    true  
##    disabled:   false (default)
#flag_filename_cut_parenthesis_area	true


## With file name, the identical character string as the directory name is deleted
## [ Example ] "/masterpiece drama/masterpiece drama 1st story avi" -> "1st story avi"
##    enabled    true
##    disabled   false (default)
#flag_filename_cut_same_directory_name	true


## Illegal character prevention with Allplay (all the slash/backslash conversions of file name)
## [ Note ] MediaWiz firmware of old edition transforms, unless this setting is true.
## As for new edition firmware, it works OK with the "false" setting
## Apparently this is intended to work work around a bug in early versions of the
## MediaWiz firmware.  Leave this setting "false"
##    使用する    true
##    削除しない  false(default)
flag_allplay_filelist_adjust	false


## (Secret Directory)
## up to 10 special hidden directories
## Format:
##  secret_directory directory_name TVID
## 
## When defined you can go to this directory by entering the 3-digit TVID directly
## on the LinkPlayer remote control
## The secret directory is just a directory name, NOT A COMPLETE PATH
## and this link is only available when the named directory exists
## in the current directory.
##
## secret_directory <directory name> <TVID> (3-digit number)
#secret_directory	ero_movie	988
#secret_directory	ero_gazou	989


## ---------------------------
## - (SVI indication processing setting)
## ---------------------------

## Directory with identical name as the SVI file is hidden or not
##      hide:           true 
##      don't hide:     false(default)
flag_hide_same_svi_name_directory	false


## (MAX length of SVI file information display (byte))
##      default: (no restriction)
#menu_svi_info_length_max	100


## ================================
## Automatic server detection (SSDP processing) section setting
## ================================

## Automatic server detection.
## When enabled, this will send out announcements to the network so the LinkPlayer
## can recognize and connect to this server software automatically.
## When disabled, you will need to manually configure the LinkPlayer to connect to this server. 
##    enable:true  (default)
##    disabled:false
flag_auto_detect	true


## The server name which shows on the LinkPlayer server menu
server_name	Wizd


## The host IP address which makes the SSDP server detection communication
## Use this to force the server to operate on only one network segment, 
## if you have multiple network segments.
## In most cases the default automatic setting will work.
##    Default: Automatic
#auto_detect_bind_ip_address	192.168.0.200



## ============================
## = (Complete monitoring system)
## ============================

## (Execution user/group setting)
## UserID where wizd operates can be set. Only valid when root starts the server
##  Default: user which starts the application
## This is useful when running the server in Linux
## For windows, leave these disabled
#exec_user	wizd
#exec_group	wizd



## =================================
## = Stream buffering configuration
## =================================

## (Block count of read cache buffer)
## buffer_size is the block count of the disk cache buffer which is used for streaming
## stream_chunk_size is the number of bytes in each block of the read buffer
## socket_chunk_size is the number of bytes written to the network in each network write
## flag_buffer_send_asap, if true, sends the bytes as soon as they are read from the file
##                        if false, will continue reading until the buffer is full before writing
##
## Recommended values:
##   buffer_size        8
##   stream_chunk_size  65536
##   socket_chunk_size  32768
##   flag_buffer_send_asap	false
buffer_size	8
stream_chunk_size	65536
socket_chunk_size	32768
flag_buffer_send_asap	false

## Socket buffer sizes
## The default is to use the value provided by the operating system
## The value used is reported in the debug log output
## Since the server sends large amounts of data, but receives little,
## the sndbuf should be larger than the rcvbuf
## In Windows XP you can use the Task Manager to view the network performance curves,
## and then experiment with the numbers to see which numbers give the smoothest curves
## The most important numbers are stream_sndbuf and stream_chunk_size
stream_rcvbuf	4096
stream_sndbuf	1048576


## UserAgent proxy override
## When defined, if a proxy server is detected, this UserAgent is assumed
## Only one setting is allowed here
##  default: not used
#user_agent_proxy_override	Syabas/03-84-031224-08-VTL-102-000/08-VTL (uCOS-II v2.05;NOS;KA9Q; 624x416,HiColor; www.syabas.com)
#user_agent_proxy_override	Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)


## Restriction on the number of clients accepted at one time
## Too many clients can cause serious problems in linux
##  default: 0 (no restriction)
#max_child_count	2


## CGI Execution: allow or not
##  This allows server side scripts to be used.
##  Server scripts are executable programs or scripts with the ".cgi" extension
##  If you have cygwin and perl installed, then you can use perl scripts as well
##    allow:true  (default)
##    do not allow:false
flag_execute_cgi	false


## (output error when executing CGI script)
# default: /dev/null
#debug_cgi_output	/dev/tty
#debug_cgi_output	/opt/var/log/wizd_cgi_debug.log


## Proxy use
## Enables operation through a proxy server
##    Allow proxy: true  (default)
##    Prohibit proxy: false
#flag_allow_proxy	false


## User-Agent for PC connections
##  User-Agent matching this string will be flagged as PC clients,
##  and will have output adjusted to display better on PCs
# default: undefined
user_agent_pc	Mozilla

## HTTP Basic authentication
## Enable this to enable username/password authentication to limit access to the server
# usage    user:password
#http_passwd	wizd:hoge

##  Adjust file name playlist for Windows, replaces the '\' with '/',
##  case insensitive and sjis character set
##      Adjust filenames:           true
##      Leave filenames unchanged:  false (default)
flag_filename_adjustment_for_windows	true

## Enable parsing mp3 files for ID3 tags
## The ID3 tag information is then displayed in the playlist
## and can be used in the skin display
flag_read_mp3_tag	true

## Enable automatic combining of series of VOB files into a single virtual file
## This allows you to play back DVD movies smoothly, without break between files
flag_show_first_vob_only	true

## Enable single-chapter mode with DVD playback
## When enabled, the LinkPlayer will pause for about 1 second between chapters
## but you will have a little better navigation by chapter
## Default: false
flag_split_vob_chapters	false

## Enable display of the audio stream information in DVD directories
flag_show_audio_info	true

## Hide any DVD titles which are short (e.g. menus)
flag_hide_short_titles	true

## Enable scanning of subdirectories when creating all play lists
## true: will play files in current folder AND all subfolders
## false: will play ONLY the files in the current folder
flag_allplay_includes_subdir	true

## max_play_list_items   Set the maximum number of playlist items sent to the LinkPlayer
## max_play_list_search  Set the maximum number of files found prior to randomly shuffling them
## Generally you would want the search value to be high enough to cover all of your files,
## so you get decent randomization of recursive allplay and shuffle playlists 
## If the number of items is too high, it may take a long time to create the playlist
## I think the LinkPlayer has a maximum playlist length of 9999 files?
## The default items is 500
## The default search is 2000
max_play_list_items	200
max_play_list_search	10000

## Set the threshold over which bookmarks will be saved
## Files smaller than this will not get bookmarks saved
## When saving a bookmark, this number will be subtracted from the current file offset
## to account for the buffer size in the LinkPlayer, so that playback will resume
## at nearly the same position as it was stopped.
##
## flag_goto_percent_video, when true, creates chapter points at 10% intervals for single-play video
## flag_goto_percent_audio, when true, creates chapter points at 10% intervals for single-play mp3
##
## define this as "0" to disable bookmarks
## Default value is 10000000
bookmark_threshold	12000000
flag_bookmarks_only_for_mpeg	true
flag_goto_percent_video	true
flag_goto_percent_audio false

## Length of empty "dummy" chapters sent as placeholders to re-sync the
## LinkPlayer position with the wizd position
## If this value is 0, then no attempt is made to re-sync chapters
## If this value is about 1000000 then the dummy chapters will show
## just a little bit of the beginning of each chapter while it re-syncs
dummy_chapter_length	0

## This flag sets how to open .vob files
## true: to always use the libdvdread library to access vob files (more compatible)
## false: directly access the vob files from the hard drive (faster)
flag_always_use_dvdopen	false

# Mime type mapping to skin lines
# The skin type also effects how wizd handles the file.
# For example, "jpeg" type files are displayed differently from "image"
# The following skin line types are available:
#
#  unknown	( everything else )
#  dir		( directory )
#  pseudo	( 仮想ディレクトリ )
#
#  document 	( text files )
#  url		( internet explorer URL link files)
#  movie	( streamed video )
#  music	( streamed music )
#  image	( bitmaps such as bmp, gif, png )
#  jpeg		( photographs )
#  playlist	( list of videos )
#  musiclist	( list of songs )
#  svi		( AVI video )
#  iso		( ISO image file )

# Note: following are hard-coded in the program as internally required mappings
#  playlist (plw, pls, upl)
#  musiclist (m3u)
#  url: (url)
#  pseudo: (tsv)

#		ext.	mimetype	skinline
# Document types
mime_type	txt	text/plain	document
mime_type	htm	text/html	document 
mime_type	html	text/html	document

# Image types
mime_type	gif	image/gif	image
mime_type	png	image/png	image
mime_type	jpg	image/jpeg	jpeg
mime_type	jpeg	image/jpeg	jpeg

# SVI types
mime_type	svi	video/mpeg	svi
mime_type	sv3	video/mpeg	svi

# Video types
mime_type	avi	video/msvideo	movie
mime_type	mpg	video/mpeg	movie
mime_type	mpeg	video/mpeg	movie
mime_type	hnl	video/mpeg	movie
mime_type	nuv	video/mpeg	movie
mime_type	vob	video/mpeg	movie
mime_type	vro	video/mpeg	movie
mime_type	ts	video/mpeg	movie
mime_type	tp	video/mpeg	movie
mime_type	m2t	video/mpeg	movie
mime_type	mov	video/quicktime	movie
mime_type	wmv	video/x-ms-wmv	movie
mime_type	asf	video/x-ms-wmx	movie
mime_type	divx	video/divx5	movie
mime_type	mp4	video/divx5	movie

# ISO images
mime_type	iso	video/mpeg	iso
mime_type	img	video/mpeg	iso

# Audio types
mime_type	mp3	audio/x-mpeg	music
mime_type	ogg	audio/x-ogg	music
mime_type	wma	audio/x-ms-wma	music
mime_type	wav	audio/x-wav	music
mime_type	ac3	audio/ac3	music
mime_type	m4a	audio/x-m4a	music


# Filename extension remapping
# Note: this only changes the name of the file as it is reported to the client
# It does not change how the file is interpreted on the server,
# so the mime_type for the original extension will be used
# so the original extension MUST have a mime_type defined for it
#
#		orig	served
ext_remap	m2p	mpg
ext_remap	m2t	ts
ext_remap	tp	ts
ext_remap	mpeg	mpg
ext_remap	jpeg	jpg

## ===========================================================================
## = wizd -- end of config file.
## ===========================================================================

